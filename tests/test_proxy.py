import imaplib, email, sys

""" Tests for proxy.py """

def run_tests(conn_proxy):
    test_mesg = ('From: %(user)s%(lf)sSubject: IMAP4 test%(lf)s%(lf)sEmail generated by ' \
                + 'IMAProxy tests%(lf)s' % {'user':USER, 'lf':'\n'}).encode()
    test_seq1 = (
        ('login', (USER, PASSWD)),
        ('create', ('/tmp/xxx',)),
        ('rename', ('/tmp/xxx', '/tmp/yyy')),
        ('CREATE', ('/tmp/yyz',)),
        ('append', ('/tmp/yyz', None, None, test_mesg)),
        ('list', ('/tmp', 'yy*')),
        ('select', ('/tmp/yyz',)),
        ('search', (None, 'SUBJECT', 'test')),
        ('fetch', ('1', '(FLAGS INTERNALDATE RFC822)')),
        ('store', ('1', 'FLAGS', '(\Deleted)')),
        ('namespace', ()),
        ('expunge', ()),
        ('recent', ()),
        ('close', ()),
        ('delete', ('/tmp/yyz',)),
        ('DELETE', ('/tmp/yyy',)))

    test_seq2 = (
        ('select', ()),
        ('response',('UIDVALIDITY',)),
        ('uid', ('SEARCH', 'ALL')),
        ('response', ('EXISTS',)),
        ('recent', ()),
        ('logout', ()))

    failed_tests = []
    succeed_tests = []

    def run(cmd, args):
        print("["+cmd+"]")
        typ, dat = getattr(conn_proxy, cmd)(*args)
        
        if typ == 'NO': 
            failed_tests.append('%s => %s %s' % (cmd, typ, dat))
        else:
            succeed_tests.append('%s => %s %s' % (cmd, typ, dat))

        return dat

    for cmd,args in test_seq1:
        run(cmd, args)

    for cmd,args in test_seq2:
        dat = run(cmd, args)

        if (cmd,args) != ('uid', ('SEARCH', 'ALL')):
            continue

        uid = dat[-1].split()
        if not uid: 
            continue

        run('uid', ('FETCH', '%s' % uid[-1].decode(),
                '(FLAGS INTERNALDATE RFC822.SIZE RFC822.HEADER RFC822.TEXT)'))

    # Display results
    if not failed_tests:
        print('TESTS SUCCEEDED')
    else:
        print('SOME TESTS FAILED:')
        for test in failed_tests:
            print(FAIL, test)

if __name__ == '__main__':

    USER = sys.argv[1]
    PASSWD = sys.argv[2]
    IP_PROXY = sys.argv[3]

    try:
        print("Try to connect to the proxy without SSL/TLS")
        run_tests(imaplib.IMAP4(IP_PROXY))
    except ConnectionRefusedError:
        print("Port 143 blocked")
        print("Try to connect to the proxy with SSL/TLS")
        try:
            run_tests(imaplib.IMAP4_SSL(IP_PROXY))
        except ConnectionRefusedError:
            print("Ports 143 and 993 blocked")
            print("Please verify if the proxy or ports 143/993 are up")
    